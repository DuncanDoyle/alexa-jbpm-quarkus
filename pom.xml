<?xml version="1.0"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.jbpm.alexa</groupId>
  <artifactId>alexa-jbpm-quarkus-2</artifactId>
  <version>1.0-SNAPSHOT</version>
  <properties>
    <surefire-plugin.version>2.22.0</surefire-plugin.version>
    <quarkus.version>0.13.3</quarkus.version>
    <maven.compiler.source>1.8</maven.compiler.source>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.target>1.8</maven.compiler.target>

    <!--
    <version.com.amazon.alexa>1.8.1</version.com.amazon.alexa>
    -->
    <version.com.amazon.alexa>2.17.1</version.com.amazon.alexa>

    <version.org.kie>7.18.0.Final</version.org.kie>
    <version.com.oracle.substratevm>1.0.0-rc14</version.com.oracle.substratevm>
  </properties>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>io.quarkus</groupId>
        <artifactId>quarkus-bom</artifactId>
        <version>${quarkus.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <dependencies>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-resteasy</artifactId>
    </dependency>

    <!-- KIE Dependencies -->
    <dependency>
			<groupId>org.kie.server</groupId>
			<artifactId>kie-server-client</artifactId>
			<version>${version.org.kie}</version>
			<scope>compile</scope>
      <!--
       <exclusions>
        <exclusion>
          <groupId>org.drools</groupId>
          <artifactId>drools-core</artifactId>
        </exclusion>
       
        <exclusion>
          <groupId>org.optaplanner</groupId>
          <artifactId>optaplanner-core</artifactId>
        </exclusion>
        
        <exclusion>
          <groupId>org.optaplanner</groupId>
          <artifactId>optaplanner-persistence-xstream</artifactId>
        </exclusion>
        
        <exclusion>
          <groupId>org.optaplanner</groupId>
          <artifactId>optaplanner-persistence-jaxb</artifactId>
        </exclusion>
        
        <exclusion>
          <groupId>com.thoughtworks.xstream</groupId>
          <artifactId>xstream</artifactId>
        </exclusion>
        
      </exclusions>
      -->
		</dependency>

    <!-- GraalVM/SubstrateVM-->
    <dependency>
      <groupId>com.oracle.substratevm</groupId>
      <artifactId>svm</artifactId>
      <version>${version.com.oracle.substratevm}</version>
    </dependency>
    

    <!-- Third Party Dependencies -->
    <!--
    <dependency>
			<groupId>com.amazon.alexa</groupId>
			<artifactId>alexa-skills-kit</artifactId>
			<version>${version.com.amazon.alexa}</version>
			<scope>compile</scope>
      <exclusions>
        <exclusion>
          <groupId>javax.servlet</groupId>
          <artifactId>javax.servlet-api</artifactId>
        </exclusion>
        <exclusion>
          <groupId>log4j</groupId>
          <artifactId>log4j</artifactId>
        </exclusion>
      </exclusions>
		</dependency>
    -->
    <dependency>
      <groupId>com.amazon.alexa</groupId>
      <artifactId>ask-sdk</artifactId>
      <version>${version.com.amazon.alexa}</version>
    </dependency>
    <dependency>
      <groupId>com.amazon.alexa</groupId>
      <artifactId>ask-sdk-servlet-support</artifactId>
      <version>${version.com.amazon.alexa}</version>
    </dependency>

    
    <!-- Test Dependencies -->
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-junit5</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.rest-assured</groupId>
      <artifactId>rest-assured</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <groupId>io.quarkus</groupId>
        <artifactId>quarkus-maven-plugin</artifactId>
        <version>${quarkus.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>build</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${surefire-plugin.version}</version>
        <configuration>
          <systemProperties>
            <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
          </systemProperties>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>native</id>
      <activation>
        <property>
          <name>native</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-maven-plugin</artifactId>
            <version>${quarkus.version}</version>
            <executions>
              <execution>
                <goals>
                  <goal>native-image</goal>
                </goals>
                <configuration>
                  <enableJni>true</enableJni>
                  <enableHttpUrlHandler>true</enableHttpUrlHandler>
                  <enableHttpsUrlHandler>true</enableHttpsUrlHandler>
                  <enableAllSecurityServices>true</enableAllSecurityServices>
                  <!--
                  <additionalBuildArgs>-H:ReflectionConfigurationFiles=reflection.json</additionalBuildArgs>
                  -->
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <artifactId>maven-failsafe-plugin</artifactId>
            <version>${surefire-plugin.version}</version>
            <executions>
              <execution>
                <goals>
                  <goal>integration-test</goal>
                  <goal>verify</goal>
                </goals>
                <configuration>
                  <systemProperties>
                    <native.image.path>${project.build.directory}/${project.build.finalName}-runner</native.image.path>
                  </systemProperties>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
